#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2017-2020  The SymbiFlow Authors.
#
# Use of this source code is governed by a ISC-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/ISC
#
# SPDX-License-Identifier: ISC
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import subprocess
import git

#Get repo name to use for sphinx-issues
#TODO test with sphinx-issues
repo = git.Repo(".", search_parent_directories=True)
repo_description = repo.description
repo_name = "SymbiFlow/" + repo.remotes.origin.url.split('.git')[0].split('/')[-1]
repo_url = 'https://github.com/' + repo_name

# -- Project information -----------------------------------------------------
project = repo_name
copyright = '2021, SymbiFlow Team'
author = 'SymbiFlow Team'

# -- General configuration ------------------------------------------------

needs_sphinx = '3.0'

#TESTLINE

extensions = [
     'm2r2',
     'sphinxcontrib.images',
     'sphinx_issues',
     'sphinx.ext.napoleon',
#     'sphinxcontrib_hdl_diagrams',
     'sphinx.ext.autodoc',
     'sphinx.ext.autosummary',
     'sphinx.ext.doctest',
     'sphinx.ext.imgmath',
     'sphinx.ext.todo',
     'sphinx_tabs.tabs',
    #  'symbolator_sphinx',
     'sphinxcontrib.jinja',
     'testfromcommon',
     '2ndtestfromcommon',
]


# Make sphinxcontrib_verilog_diagrams use Yosys installed in conda
hdl_diagram_yosys = "system"

#sphinx-issues
issues_github_path = repo_name


# -- Options for HTML output -------------------------------------------------
html_theme = 'sphinx_symbiflow_theme'

html_title = repo_name
nav_title = repo_name

html_sidebars = {
    "**": ["logo-text.html", "globaltoc.html", "localtoc.html", "searchbox.html"]
}

html_theme_options = {
    'repo_name': repo_name,
    'github_url': repo_url,
    'logo_icon': '&#xe869',
    'globaltoc_depth': 2,
    'heroes': {
        'index': repo_description
    }
    #check support for header links
    # 'header_links' : [
    #     ('Home', 'index', False, 'home'),
    #     ("Website", "https://symbiflow.github.io", True, 'launch'),
    #     ("GitHub", "https://github.com/SymbiFlow", True, 'code')
    # ],
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']
source_suffix = ['.rst', '.md']

m2r_parse_relative_links = True

symbolator_cmd_args       = ['--transparent']
symbolator_output_format  = 'svg'
# The master toctree document.
master_doc = 'index'
# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# These patterns also affect html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store', 'env', 'third_party']


#END OF NEW CONFIG

# # Enable github links when not on readthedocs
# # on_rtd = os.environ.get('READTHEDOCS', None) == 'True'
# # if not on_rtd:
# #     html_context = {
# #         "display_github": True,  # Integrate GitHub
# #         "github_user": "symbiflow",  # Username
# #         "github_repo": "prjxray",  # Repo name
# #         "github_version": "master",  # Version
# #         "conf_py_path": "/doc/",
# #     }
# # else:
# #     docs_dir = os.path.abspath(os.path.dirname(__file__))
# #     print("Docs dir is:", docs_dir)
# #     subprocess.call('git fetch origin --unshallow', cwd=docs_dir, shell=True)
# #     subprocess.check_call('git fetch origin --tags', cwd=docs_dir, shell=True)
# #     subprocess.check_call('make links', cwd=docs_dir, shell=True)

# # # The version info for the project you're documenting, acts as replacement for
# # # |version| and |release|, also used in various other places throughout the
# # # built documents.
# # #
# # # The full version, including alpha/beta/rc tags.
# # release = re.sub('^v', '', os.popen('git describe ').read().strip())
# # # The short X.Y version.
# # version = release


# # If true, `todo` and `todoList` produce output, else they produce nothing.
# todo_include_todos = True

# # -- Options for HTML output ----------------------------------------------


# html_theme_options = {
#     # For details see link.
#     # https://getmdl.io/components/index.html#layout-section
#     'fixed_drawer':
#     True,
#     'fixed_header':
#     True,
#     'header_waterfall':
#     True,
#     'header_scroll':
#     False,

#     # Render title in header.
#     # Values: True, False (Default: False)
#     'show_header_title':
#     False,
#     # Render title in drawer.
#     # Values: True, False (Default: True)
#     'show_drawer_title':
#     True,
#     # Render footer.
#     # Values: True, False (Default: True)
#     'show_footer':
#     True
# }
